<?php


//======================================================================================
/* Potential Problems */
/* NOde id is hardcoded 
   Teaser and body treated the same...
   Probably should create our own table to do this - node table is a bit mysterious and could change 
   Read the body user and date fields from there...
*/



//======================================================================================


/**
 * Implementation of hook_form_alter().
 */
function myblock_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'node_type_form' && isset($form['identity']['type'])) {
    $options = array(t('Disabled'), t('Enabled'));
    $form['myblock'] = array(
			     '#type' => 'fieldset',
			     '#title' => t('Form block'),
			     '#weight' => 0,
			     );
    $form['myblock']['myblock_expose'] = array(
					       '#type' => 'radios',
					       '#title' => t('Enable data entry from a block'),
					       '#default_value' => variable_get('myblock_expose_'. $form['#node_type']->type, 0),
					       '#options' => $options,
					       '#description' => t('Enable this option to make the entry form for this content type available as a block.'),
					       );
  }
}

//======================================================================================
/* Form/Node stuff */
//======================================================================================

function myblock_node_info () {

  return array(
	       'admin_report_note' => array(
			       'name' => t('My Block Note'), 
			       'module' => 'myblock', 
			       'description' => t("More Admin Note experimentation"),
			       ),
	       );
}

function admin_report_note_form($form_state)
{
  $form=array();
  $form['body'] = array(
		       '#type' => 'textfield',
		       '#title' => t('note'),
		       '#default_value' => t('foo'),
		       '#size' => 60,
		       '#maxlength' => 64,
		       '#description' => t('note'),
		       );
  $form['user'] = array(
			'#type' => 'textfield',
			'#title' => t('name'),
			'#default_value' => t('foo'),
			'#size' => 20,
			'#maxlength' => 20,
			'#description' => t('Your name'),
		       );
  $form['submit'] = array('#type' => 'submit', 
			  '#value' => t('Save'));
  return $form;
  /* return node_content_form($node, $form_state); */
}

function admin_report_note_form_submit($form, $form_state)
{
  $query = db_query("SELECT body FROM node_revisions WHERE nid = 1");
  $result = db_result($query);
  /* echo "<h1>Behold!: " . $result . "</h1>"; */
  $new_note = $form_state['values']['body'];
  $new_note_taker = $form_state['values']['user'];
  $newest_text = $result . "\n" . "{$new_note}: {$new_note_taker}";
  $query = db_query("UPDATE node_revisions SET body='{$newest_text}', teaser='{$newest_text}' WHERE nid = 1");

  /* db_query("INSERT INTO {table} (name, log, hidden) VALUES ('%s', %d, '%s')", $form_state['values']['name'], $form_state['values']['hidden']); */


    /* drupal_set_message(t('Your form has been saved.')); */
}

/* function myblock($form_state) */
/* { */
/*   return node_content_form($node, $form_state); */
/* } */



//======================================================================================
/* Set up the block view */
//======================================================================================

//node_add works but drupal_get_form fails horribly for some reason - cant find the form
function retrieve_block_view($type) {
  /* $current_page = node_show(); */

  $temp = node_load(1);
  //node_show only seems to get the body of the node and not the title:
  $output = node_show($temp, NULL);  //second parameter is the first comment i believe
  /* $output = 'bravo'; */
  /* $form = node_add($type); */
  $form = drupal_get_form('admin_report_note_form');
  /* return $form; */
  return $output . $form;
}


//======================================================================================

/**
 * Implementation of hook_block().
 */
function myblock_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
  case 'list':
    $blocks = array();
    foreach (node_get_types('names') as $type => $name) {
      if (variable_get('myblock_expose_'. $type, 0)) {
	$blocks[$type] = array(
			       'info' => t('@name form block', array('@name' => $name)),
			       );
      }
    }
    $blocks['user_register'] = array(
				     'info' => t('User registration form'));
    if (module_exists('contact')) {
      $blocks['contact_site'] = array(
				      'info' => t('Site-wide contact form'));
    }
    return $blocks;

  case 'view':
    switch ($delta) {
    case 'user_register':
      global $user;
      // Don't display the form to logged in users or if registration is disabled
      if (!$user->uid && variable_get('user_register', 1)) {
	drupal_add_css(drupal_get_path('module', 'myblock'). '/myblock.css', 'module', 'all');
	return array(
		     'subject' => t('Create new account'),
		     'content' => drupal_get_form('user_register')
		     );
      }
      break;

    case 'contact_site':
      if (user_access('access site-wide contact form') && module_exists('contact')) {
	if (!flood_is_allowed('contact', variable_get('contact_hourly_threshold', 3))) {
	  $content = t("You cannot send more than %number messages per hour. Please try again later.", array('%number' => variable_get('contact_hourly_threshold', 3)));
	}
	else {
	  drupal_add_css(drupal_get_path('module', 'myblock'). '/myblock.css', 'module', 'all');
	  module_load_include('inc', 'contact', 'contact.pages');
	  $content = drupal_get_form('contact_mail_page');
	}
	return array(
		     'subject' => t('Contact'),
		     'content' => $content,
		     );
      }
      break;

    default:
      return myblock_get_block($delta);

    }
  }
}

/**
 * Generate a block containing a node entry form.
 */
function myblock_get_block($type) {
  if (node_access('create', $type)) {
    // Include page handler for node_add()
    module_load_include('inc', 'node', 'node.pages');
    // Note title before rendering of form.
    $title = drupal_get_title();
    $form = node_add($type);
    $types = node_get_types('names');
    // Restore title, which will have been overridden.
    drupal_set_title($title);
    return array(
		 'subject' => t('@type form', array('@type' => $types[$type])),
		 /* 'content' => $form, */
		 /* 'content' => 'pandas', */
		 'content' => retrieve_block_view($type),
		 );
  }
}
